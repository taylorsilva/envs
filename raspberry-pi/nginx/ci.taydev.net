server {
    if ($host = ci.taydev.net) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name ci.taydev.net;
    return 404; # managed by Certbot
}

server {
    listen 443 ssl http2;
    server_name ci.taydev.net;

    ssl_certificate /etc/letsencrypt/live/ci.taydev.net/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/ci.taydev.net/privkey.pem; # managed by Certbot

    add_header Strict-Transport-Security "max-age=31536000" always;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Security / XSS Mitigation Headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    location / {
        # Proxy main concourse traffic
        proxy_pass http://insidethebox.taydev.net:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Forwarded-Host $http_host;

        # Disable buffering when the nginx proxy gets very resource heavy upon streaming
        proxy_buffering off;
    }

    location ~ /hijack$ {
        # Proxy websocket traffic
        proxy_pass http://insidethebox.taydev.net:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        # For websocket
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Disable buffering when the nginx proxy gets very resource heavy upon streaming
        proxy_buffering off;
    }
}
